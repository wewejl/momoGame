// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pd/test.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//定义枚举
type PhoneType int32

const (
	PhoneType_MOBILE PhoneType = 0
	PhoneType_WORK   PhoneType = 1
	PhoneType_HOME   PhoneType = 2
)

var PhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "WORK",
	2: "HOME",
}

var PhoneType_value = map[string]int32{
	"MOBILE": 0,
	"WORK":   1,
	"HOME":   2,
}

func (x PhoneType) String() string {
	return proto.EnumName(PhoneType_name, int32(x))
}

func (PhoneType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_be2a4c8132d5feb0, []int{0}
}

type Person struct {
	//定义字段
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	//年龄
	Age int32 `protobuf:"varint,2,opt,name=Age,proto3" json:"Age,omitempty"`
	//使用自己定义的结构
	Phone *Person_PhoneNumber `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	//定义数组
	Phones []*Person_PhoneNumber `protobuf:"bytes,5,rep,name=Phones,proto3" json:"Phones,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Person_School
	//	*Person_Score
	Data                 isPerson_Data `protobuf_oneof:"Data"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_be2a4c8132d5feb0, []int{0}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Person) GetPhone() *Person_PhoneNumber {
	if m != nil {
		return m.Phone
	}
	return nil
}

func (m *Person) GetPhones() []*Person_PhoneNumber {
	if m != nil {
		return m.Phones
	}
	return nil
}

type isPerson_Data interface {
	isPerson_Data()
}

type Person_School struct {
	School string `protobuf:"bytes,6,opt,name=school,proto3,oneof"`
}

type Person_Score struct {
	Score int32 `protobuf:"varint,7,opt,name=score,proto3,oneof"`
}

func (*Person_School) isPerson_Data() {}

func (*Person_Score) isPerson_Data() {}

func (m *Person) GetData() isPerson_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Person) GetSchool() string {
	if x, ok := m.GetData().(*Person_School); ok {
		return x.School
	}
	return ""
}

func (m *Person) GetScore() int32 {
	if x, ok := m.GetData().(*Person_Score); ok {
		return x.Score
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Person) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Person_School)(nil),
		(*Person_Score)(nil),
	}
}

//我们把这个定义到里面来    外部就使用不到
type Person_PhoneNumber struct {
	Number               string    `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Type                 int32     `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Phonetype            PhoneType `protobuf:"varint,3,opt,name=phonetype,proto3,enum=pb.PhoneType" json:"phonetype,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Person_PhoneNumber) Reset()         { *m = Person_PhoneNumber{} }
func (m *Person_PhoneNumber) String() string { return proto.CompactTextString(m) }
func (*Person_PhoneNumber) ProtoMessage()    {}
func (*Person_PhoneNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_be2a4c8132d5feb0, []int{0, 0}
}

func (m *Person_PhoneNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person_PhoneNumber.Unmarshal(m, b)
}
func (m *Person_PhoneNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person_PhoneNumber.Marshal(b, m, deterministic)
}
func (m *Person_PhoneNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person_PhoneNumber.Merge(m, src)
}
func (m *Person_PhoneNumber) XXX_Size() int {
	return xxx_messageInfo_Person_PhoneNumber.Size(m)
}
func (m *Person_PhoneNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_Person_PhoneNumber.DiscardUnknown(m)
}

var xxx_messageInfo_Person_PhoneNumber proto.InternalMessageInfo

func (m *Person_PhoneNumber) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Person_PhoneNumber) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Person_PhoneNumber) GetPhonetype() PhoneType {
	if m != nil {
		return m.Phonetype
	}
	return PhoneType_MOBILE
}

func init() {
	proto.RegisterEnum("pb.PhoneType", PhoneType_name, PhoneType_value)
	proto.RegisterType((*Person)(nil), "pb.Person")
	proto.RegisterType((*Person_PhoneNumber)(nil), "pb.Person.PhoneNumber")
}

func init() { proto.RegisterFile("pd/test.proto", fileDescriptor_be2a4c8132d5feb0) }

var fileDescriptor_be2a4c8132d5feb0 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xcd, 0x4e, 0xc3, 0x30,
	0x10, 0x84, 0xeb, 0xfc, 0x18, 0xb2, 0x55, 0x51, 0xb4, 0x87, 0xc8, 0xe2, 0x64, 0x71, 0x8a, 0x28,
	0x32, 0x52, 0x79, 0x02, 0x2a, 0x2a, 0x05, 0x41, 0x9b, 0xca, 0x42, 0xe2, 0x9c, 0x14, 0x43, 0x0f,
	0x34, 0xb6, 0x62, 0x73, 0xe8, 0x4b, 0xf1, 0x8c, 0xc8, 0x4e, 0xf8, 0x39, 0x71, 0xfb, 0x76, 0x67,
	0xbc, 0x9a, 0x31, 0xcc, 0xcc, 0xcb, 0xb5, 0x53, 0xd6, 0x09, 0xd3, 0x6b, 0xa7, 0x31, 0x32, 0xed,
	0xc5, 0x67, 0x04, 0x74, 0xab, 0x7a, 0xab, 0x3b, 0x44, 0x48, 0x36, 0xcd, 0x41, 0x31, 0xc2, 0x49,
	0x99, 0xc9, 0xc0, 0x98, 0x43, 0x7c, 0xfb, 0xa6, 0x58, 0xc4, 0x49, 0x99, 0x4a, 0x8f, 0x78, 0x05,
	0xe9, 0x76, 0xaf, 0x3b, 0xc5, 0x12, 0x4e, 0xca, 0xe9, 0xa2, 0x10, 0xa6, 0x15, 0xc3, 0x01, 0x11,
	0xf6, 0x9b, 0x8f, 0x43, 0xab, 0x7a, 0x39, 0x98, 0x50, 0x00, 0x0d, 0x60, 0x59, 0xca, 0xe3, 0x7f,
	0xec, 0xa3, 0x0b, 0x19, 0x50, 0xbb, 0xdb, 0x6b, 0xfd, 0xce, 0xa8, 0x4f, 0x51, 0x4d, 0xe4, 0x38,
	0x63, 0x01, 0xa9, 0xdd, 0xe9, 0x5e, 0xb1, 0x13, 0x9f, 0xa5, 0x9a, 0xc8, 0x61, 0x3c, 0x7f, 0x85,
	0xe9, 0x9f, 0x43, 0x58, 0x00, 0xed, 0x02, 0x8d, 0x35, 0xc6, 0xc9, 0x97, 0x73, 0x47, 0xf3, 0xdd,
	0x24, 0x30, 0xce, 0x21, 0x33, 0xfe, 0x69, 0x10, 0x62, 0x4e, 0xca, 0xb3, 0xc5, 0x2c, 0xe4, 0xf3,
	0xcb, 0xa7, 0xa3, 0x51, 0xf2, 0x57, 0x5f, 0x52, 0x48, 0xee, 0x1a, 0xd7, 0x5c, 0xce, 0x21, 0xfb,
	0xd1, 0x11, 0x80, 0xae, 0xeb, 0xe5, 0xfd, 0xe3, 0x2a, 0x9f, 0xe0, 0x29, 0x24, 0xcf, 0xb5, 0x7c,
	0xc8, 0x89, 0xa7, 0xaa, 0x5e, 0xaf, 0xf2, 0xa8, 0xa5, 0xe1, 0xa3, 0x6f, 0xbe, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x94, 0x81, 0xe5, 0x61, 0x79, 0x01, 0x00, 0x00,
}
